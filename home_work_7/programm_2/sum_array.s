.include "macrolib.s"
.global sum_array

.text
sum_array: 
	push (t2)    
	push (t3)								# Запись значения регистра t3
	push (t4)								# Запись значения регистра t4
	li 		a0 0							# Запись 0 в регистр a0
	li 		t3 2147483647					# Запись максимально возможного числа
	li		t4 -2147483648					# Запись минимально возможного числа             
loop:  
	lw		t2 (t0)							# Запись элемента массива в регистр t2
	if_above:
	bltz 	t2 if_below						# Проверка на знак числа
	sub 	t3 t3 t2						# Вычитаем из максимально возможного числа t2
	bgt 	a0 t3 fail_above				# Проверка на перепольнение сверху
	if_below:
	sub 	t4 t4 t2						# Вычитаем из минимально возможного числа t2
	blt 	a0 t4 fail_below				# Проверка на перепольнение снизу
	add		a0 a0 t2						# Прибавим к сумме элементов массива новый элемент
    addi    t0 t0 4							# Увеличим адрес на размер слова в байтах	
    addi    t1 t1 -1						# Уменьшим количество оставшихся элементов на 1
    bnez    t1 loop							# Если осталось больше 0
finish:
	pop (t4)								# Возврат к предыдущему значению
	pop (t3)								# Возврат к предыдущему значению
	pop (t2)
    ret										# Возврат к исходной программе
    
fail_above:
    print_str ("Оverflow from above!!!\n")	# Вывод строки уведомляющей об ошибке
    ret										# Возврат к исходной программе
fail_below:
    print_str ("Оverflow from below!!!\n")  # Вывод строки уведомляющей об ошибке
    ret										# Возврат к исходной программе
